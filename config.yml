modules:
  default:
    http_client_config:
      insecure_skip_verify: false
      follow_redirects: false
      enable_http2: false
      proxy_url: null
      body:
        content: ""
        template: false
        valid_status_codes: null
  robot:
    metrics:
      - name: robot
        type: object
        help: Example of top-level lists in a separate module
        path: $.suite.test[*]
        labels:
          suite_id: "{ .suite.id }"
          suite_name: "{ .suite.name }"
          suite_source: "{ .suite.source }"
          test_id: "{ .id }"
          test_name: "{ .name }"
        values:
          line: objectg({ .line })
      - name: robot_status
        type: object
        help: Example of extracting status information from the json
        path: $.status
        labels:
          endtime: "{ .endtime }"
          starttime: "{ .starttime }"
          status: "{ .status }"
        values:
          elapsedtime: string({ .elapsedtime })
      - name: robot_statistics
        type: object
        help: Example of extracting statistics information from the json
        path: $.statistics.total.stat
        labels:
          failed: string({ .fail })
          id: "all"
          name: "{ .text }"
          passed: string({ .pass })
          type: "total"
        values:
          elapsedtime: string({ .elapsedtime })
    http_client_config:
      insecure_skip_verify: false
      follow_redirects: false
      enable_http2: false
      proxy_url: null
      body:
        content: ""
        template: false
        valid_status_codes: null
#
    # http_client_config:
    #   tls_config:
    #     insecure_skip_verify: true
    #   basic_auth:
    #     username: myuser
    #     #password: veryverysecret
    #     password_file: /tmp/mysecret.txt

    ## List of accepted status codes for this probe can be set in 'modules.<module_name>.valid_status_codes' field. Defaults to 2xx.
    # valid_status_codes: [ <int>, ... | default = 2xx ]

    ## If 'modueles.<module_name>.body' field is set, it will be sent by the exporter as the body content in the scrape request. The HTTP method will also be set as 'POST' in this case.
    # body:
    #   content: |
    #     {"time_diff": "1m25s", "anotherVar": "some value"}

    ## The body content can also be a Go Template (https://golang.org/pkg/text/template), with all the functions from the Sprig library (https://masterminds.github.io/sprig/) available. All the query parameters sent by prometheus in the scrape query to the exporter, are available in the template.
    # body:
    #   content: |
    #     {"time_diff": "{{ duration `95` }}","anotherVar": "{{ .myVal | first }}"}
    #   templatize: true

